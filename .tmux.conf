# vim style tmux config
set -sg escape-time 0

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
#setw -g mode-keys vi

# mouse behavior
# setw -g mouse on

# set-option -g default-terminal screen-256color

#bind-key : command-prompt
#bind-key r refresh-client
# bind-key L clear-history

#bind-key space next-window
#bind-key bspace previous-window
#bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key -T prefix v split-window -h
bind-key -T prefix x split-window -v
bind-key -r -T prefix h select-pane -L
bind-key -T prefix H previous-window
bind-key -r -T prefix j select-pane -D
bind-key -r -T prefix k select-pane -U
bind-key -r -T prefix l select-pane -R
bind-key -T prefix L next-window
bind-key -T prefix p display-panes
bind-key -T prefix W new-window
bind-key -T prefix m display-panes \; command-prompt -p "Move to pane:" "swap-pane -t '%%'"
bind-key -T prefix S command-prompt -p "New session:" "new-session -A -s '%%'"
bind-key -T prefix K confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" 

# resize pane
bind-key -r -T prefix       Up                 resize-pane -U 5
bind-key -r -T prefix       Down               resize-pane -D 5
bind-key -r -T prefix       Left               resize-pane -L 5
bind-key -r -T prefix       Right              resize-pane -R 5

# close window
bind-key    -T prefix       C                    confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key    -T prefix       c                    kill-pane
# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

#bind-key C-o rotate-window

# bind-key + select-layout main-horizontal
# bind-key = select-layout main-vertical

# set-window-option -g other-pane-height 25
# set-window-option -g other-pane-width 80
# set-window-option -g display-panes-time 1500
# set-window-option -g window-status-current-style fg=magenta

# bind-key a last-pane
# bind-key q display-panes
# bind-key c new-window
#bind-key t next-window
#bind-key T previous-window

#bind-key [ copy-mode
# bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi v send -X begin-selection
#bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Status Bar
#set-option -g status-interval 1
#set-option -g status-style bg=black
#set-option -g status-style fg=white
#set -g status-left '#[fg=green]#H #[default]'
#set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# set-option -g pane-active-border-style fg=yellow
#set-option -g pane-border-style fg=cyan
# 
# Set window notifications
#setw -g monitor-activity on
#set -g visual-activity on

# Enable native Mac OS X copy/paste
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
# set-option -g repeat-time 0

